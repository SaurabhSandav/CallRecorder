import com.redridgeapps.callrecorder.callutils.callevents.CallDirection;
import kotlin.time.Duration;
import kotlinx.datetime.Instant;

-- 0 == false
-- 1 == true

CREATE TABLE IF NOT EXISTS Recording (
id INTEGER AS Long NOT NULL PRIMARY KEY AUTOINCREMENT,
name TEXT NOT NULL,
number TEXT NOT NULL,
start_instant INTEGER AS Instant NOT NULL,
duration INTEGER AS Duration NOT NULL,
call_direction TEXT AS CallDirection NOT NULL,
save_path TEXT NOT NULL,
save_format TEXT NOT NULL,
is_starred INTEGER AS Boolean NOT NULL DEFAULT 0 CHECK(is_starred IN (0, 1)), -- DEFAULT false
skip_auto_delete INTEGER AS Boolean NOT NULL DEFAULT 0 CHECK(is_starred IN (0, 1)) -- DEFAULT talse
);

insert:
INSERT OR REPLACE
INTO Recording (name, number, start_instant, duration, call_direction, save_path, save_format)
VALUES (?, ?, ?, ?, ?, ?, ?);

get:
SELECT * FROM Recording WHERE id IN ?;

getAll:
SELECT * FROM Recording
ORDER BY id DESC;

getIsStarred:
SELECT is_starred FROM Recording
WHERE id = ?;

getSkipAutoDelete:
SELECT skip_auto_delete FROM Recording
WHERE id = ?;

setIsStarred:
UPDATE Recording
SET is_starred = ?
WHERE id IN ?;

setSkipAutoDelete:
UPDATE Recording
SET skip_auto_delete = ?
WHERE id IN ?;

updateContactName:
UPDATE Recording
SET name = ?
WHERE number = ?;

updateDuration:
UPDATE Recording
SET duration = ?
WHERE id = ?;

delete:
DELETE FROM Recording WHERE id IN ?;

deleteOverDaysOldIfNotSkippedAutoDelete:
DELETE FROM Recording
WHERE (julianday('now') - julianday(start_instant, 'unixepoch')) > :overDaysOld
AND skip_auto_delete = 0; -- AND skip_auto_delete = false
